
.. _program_listing_file__home_runner_work_wave_tracer_wave_tracer_include_wt_version.hpp:

Program Listing for File version.hpp
====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_wave_tracer_wave_tracer_include_wt_version.hpp>` (``/home/runner/work/wave_tracer/wave_tracer/include/wt/version.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   *
   * wave tracer
   * Copyright  Shlomi Steinberg
   *
   * LICENSE: Creative Commons Attribution-NonCommercial 4.0 International
   *
   */
   
   #pragma once
   
   #include <cstdint>
   #include <string>
   
   namespace wt {
   
   struct wt_version_t {
   private:
       std::string build_str;
       std::uint16_t mjr{},mnr{},ptch{};
   
   public:
       wt_version_t();
       wt_version_t(const wt_version_t&) noexcept = default;
       wt_version_t& operator=(const wt_version_t&) noexcept = default;
   
       [[nodiscard]] inline auto major() const noexcept { return mjr; }
       [[nodiscard]] inline auto minor() const noexcept { return mnr; }
       [[nodiscard]] inline auto patch() const noexcept { return ptch; }
       [[nodiscard]] inline const auto& build_string() const noexcept { return build_str; }
   
       void print_wt_version();
       std::string short_version_string();
       std::string full_version_string();
   };
   
   }
