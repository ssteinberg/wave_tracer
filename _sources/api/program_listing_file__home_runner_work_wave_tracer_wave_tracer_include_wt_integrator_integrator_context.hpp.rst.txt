
.. _program_listing_file__home_runner_work_wave_tracer_wave_tracer_include_wt_integrator_integrator_context.hpp:

Program Listing for File integrator_context.hpp
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_wave_tracer_wave_tracer_include_wt_integrator_integrator_context.hpp>` (``/home/runner/work/wave_tracer/wave_tracer/include/wt/integrator/integrator_context.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   *
   * wave tracer
   * Copyright  Shlomi Steinberg
   *
   * LICENSE: Creative Commons Attribution-NonCommercial 4.0 International
   *
   */
   
   #pragma once
   
   #include <wt/wt_context.hpp>
   #include <wt/sensor/film/defs.hpp>
   #include <wt/sensor/sensor.hpp>
   
   #include <wt/math/common.hpp>
   
   namespace wt {
   
   class wt_context;
   class scene_t;
   namespace ads { class ads_t; }
   
   namespace integrator {
   
   struct integrator_context_t {
       const wt_context_t* wtcontext;
       const scene_t* scene;
       const ads::ads_t* ads;
   
       const sensor::sensor_t* sensor;
       sensor::film_storage_handle_t* film_surface;
   };
   
   }
   }
