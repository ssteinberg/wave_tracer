
.. _program_listing_file__home_runner_work_wave_tracer_wave_tracer_include_wt_ads_bvh8w_bvh8w_node.hpp:

Program Listing for File bvh8w_node.hpp
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_wave_tracer_wave_tracer_include_wt_ads_bvh8w_bvh8w_node.hpp>` (``/home/runner/work/wave_tracer/wave_tracer/include/wt/ads/bvh8w/bvh8w_node.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    *
    * wave tracer
    * Copyright  Shlomi Steinberg
    *
    * LICENSE: Creative Commons Attribution-NonCommercial 4.0 International
    *
    */
   
   #pragma once
   
   #include <cstdint>
   #include <wt/ads/common.hpp>
   #include <wt/math/simd/wide_vector.hpp>
   
   namespace wt::ads::bvh8w {
   
   struct leaf_node_t {
       idx_t tris_ptr, count;
   };
   
   static constexpr std::size_t aabbs_per_node = 8;
   
   struct node_t {
       pqvec3_w_t<aabbs_per_node> min,max;
   
       std::int32_t child_ptrs[aabbs_per_node] = { 0,0,0,0,0,0,0,0 };   // zero indicates empty
   
       std::uint32_t tris_start, tris_count=0;
   
       // 24byte padding at the end
       // TODO: can we do anything with this space?
   };
   
   }
