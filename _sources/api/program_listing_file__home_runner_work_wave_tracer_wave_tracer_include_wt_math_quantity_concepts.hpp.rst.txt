
.. _program_listing_file__home_runner_work_wave_tracer_wave_tracer_include_wt_math_quantity_concepts.hpp:

Program Listing for File concepts.hpp
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_wave_tracer_wave_tracer_include_wt_math_quantity_concepts.hpp>` (``/home/runner/work/wave_tracer/wave_tracer/include/wt/math/quantity/concepts.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   *
   * wave tracer
   * Copyright  Shlomi Steinberg
   *
   * LICENSE: Creative Commons Attribution-NonCommercial 4.0 International
   *
   */
   
   #pragma once
   
   #include <wt/math/quantity/framework.hpp>
   
   namespace wt {
   
   using mp_units::Quantity;
   using mp_units::QuantityOf;
   using mp_units::QuantityPoint;
   using mp_units::QuantityPointOf;
   using mp_units::QuantitySpec;
   
   template<typename T>
   concept QuantityRef = mp_units::Reference<T>;
   template<typename T, auto Q>
   concept QuantityRefOf = mp_units::ReferenceOf<T, Q>;
   
   using mp_units::Dimension;
   using mp_units::DimensionOf;
   
   using mp_units::Unit;
   using mp_units::UnitOf;
   
   }
